# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/
$(document).on 'load turbolinks:load', ->
  commentForm = $('#new_comment')
  postId = $('#post-wrapper').data('post_id')
  commentsList = $('.comments')
  commentView = (data) ->
    JST['comment']({data: data})
  createComment = (data) ->
    commentsList.append(commentView(data))

  updateComments = (data) ->
    commentElem = commentsList.find("#comment_#{data.comment.id}").replaceWith(commentView(data))

  destroyComment = (data) ->
    $("#comment_#{data.comment_id}").remove();

  $(document).on 'click', '.edit-comment-link', (e) ->
    e.preventDefault();
    $(this).hide();
    commentId = $(this).data('comment_id')
    $('form#edit-comment-' + commentId).show()

  commentForm.on 'ajax:success', (e, data, status, xhr) ->
    $('#new_comment_text').val('')
    $('#new_comment .fields input').val('');

  commentForm.on 'ajax:error', (e, xhr, status, error) ->
    errors = xhr.responseJSON
    errors.map (message) ->
      $('.comment-errors').append("<p class=\"text-danger\">#{message}</p>")

  commentForm.on 'submit', ->
    $('.text-danger').each (i, e) ->
      $(e).remove()
  $('.form-group').on 'change', '.custom-file-input', ->
    fileName = $(this).val().split('\\').pop()
    $(this).next('.custom-file-label').addClass("selected").html(fileName)

  App.cable.subscriptions.create { channel: 'CommentsChannel', post_id: postId }, {
    connected: ->
      @perform 'follow'
    ,
    received: (data) ->
      switch data.action
        when 'create' then createComment(data)
        when 'update' then updateComments(data)
        when 'destroy' then destroyComment(data)
  }

