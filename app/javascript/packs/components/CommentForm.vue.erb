<template>
    <div class="row text-left">
      <% include ActionView::Helpers %>
      <form class="new_comment" id="new_comment" >
        <div class="form-group">
          <label for="new_comment_text">
            <%= "#{t('titles.comments.text')}:" %>
          </label>
          <div class="comment-errors">
            <span class="text-danger" v-for="(error, index) in errors" :key="index">
              {{error}}
            </span>
          </div>
          <textarea id="new_comment_text" class="form-control form-control-lg" rows="5" v-model="comment.text">

          </textarea>
          <div v-for="(attachment, index) in comment.attachments_attributes"
                              class="attachments"
                              :attachment="attachment"
                              :key="index">
              <div>
                <div class="custom-file">
                  <input type="file"
                         class="custom-file-input"
                         :id="`comment_attachment_${index}`"
                         @change="onImageSelected($event, attachment)">
                  <label class="custom-file-label">
                    {{ fileLabel(attachment) }}
                  </label>
                </div>
                <button class="btn btn-sm btn-small btn-danger remove_file">
                  <%= t('titles.attachments.delete') %>
                </button>
              </div>
            </div>
          <a class="add_comment_attachment" @click.prevent="addAttachment">
            <%= t('titles.attachments.add') %>
          </a>
        </div>
        <button class="btn" data-disable-with="Збереження..." @click.prevent="createComment">
          <%= t('titles.comments.add') %>
        </button>
      </form>
    </div>
</template>

<script>
  import objectToFormData from '../shared/object_to_form_data';

  export default {
    props: ['post_id'],
    name: 'CommentForm',
    data() {
      return {
        comment: {
          text: '',
          attachments_attributes: [],
        },
        errors: [],
      };
    },
    methods: {
      createComment() {
        const comment = objectToFormData(this.comment, null, 'comment');
        this.$http.post(`/posts/${this.post_id}/comments`, comment).then((response) => {
          this.comment = {
            text: '',
            attachments_attributes: [],
           };
        this.errors = [];
        },
         (response) => {
          this.errors = response.body;
        });
      },
       addAttachment() {
        this.comment.attachments_attributes.push({
          id: null,
          file: '',
          _destroy: null,
        });
      },
      onImageSelected(event, attachment) {
        attachment.file = event.target.files[0];
      },
      fileLabel(attachment) {
        return attachment.file ? attachment.file.name : 'Choose your image';
      },
    },
  };
</script>

<style scoped>

</style>
