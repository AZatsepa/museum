<template>
  <div class="col-lg-9">
    <div class="comments">
      <app-comment v-for="comment in mutableComments" :comment="comment" :key="comment.id"></app-comment>
    </div>
    <app-comment-form :post_id="myPostId" v-if="this.$can('create', 'Comment')"></app-comment-form>
  </div>
</template>

<script>
  import Comment from './Comment.vue.erb'
  import CommentForm from './CommentForm.vue.erb'

  export default {
    name: 'Comments',
    props: ['comments', 'post_id'],
    components: {
      appComment: Comment,
      appCommentForm: CommentForm,
    },
    data() {
      return {
        mutableComments: this.comments,
        myPostId: this.post_id,
      };
    },
    created() {
      const this2 = this;

      App.cable.subscriptions.create( // eslint-disable-line no-undef
        { channel: 'CommentsChannel', post_id: this2.post_id },
        { connected() {
            return this.perform('follow');
          },
          received(data) {
            switch (data.action) {
              case 'create': {
                this2.mutableComments.push(data.comment);
                break;
              }
              case 'destroy': {
                const index = this2.comments.findIndex(comment => comment.id === data.comment.id);
                this2.mutableComments.splice(index, 1);
                break;
              }
              default: {
                break;
              }
            }
          },
        },
      );
    },
  };
</script>

<style scoped>

</style>
